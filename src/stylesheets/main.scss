/* Instructions for this assignment:
 * Use multiple-line and single-line comments (At least 5 comments each)
 * Nest as many of the rules as you can
 * Create at least 10 variables and use them
 * Create and use at least 2 mixins without arguments
 * Create a mixin named make-column with a single $width argument
 * Create a list whose items are the numbers 1 through 12.
 * Loop through this list and use interpolation to generate the 
 * .column-1 through .column-12 rules dynamically.
 * Extract all the rules involving the .nav selector into a new .scss file
 */

// My variables
$absolute-position: absolute;
$block: block;
$charcoal: #333;
$cyan-blue: #0d6efd;
$dark-color: rgba(0, 0, 0, .1);
$gray-color: #303030;
$inline-block: inline-block;
$light-color: rgba(255, 255, 255, .4);
$relative-position: relative;
$white: #FFF;

// My mixins without an argument
@mixin zeroes {
  margin: 0;
  padding: 0;
}

@mixin common {
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: 300;
  font-size: 11pt;
  line-height: 1.75em;
}

/* This is an extra mixin, 
 * which I'm going to use later in the code
 */
@mixin general-headings { 
  letter-spacing: 1px;
  text-transform: uppercase;
  font-weight: 300;
}

// The mixin with an argument
@mixin make-column($width) {
  // List from 1 through 12
  $numbers: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;  
  
  /* Loop through all the elements in the list, 
   * then calculate the width based of the number of columns
   */
  @each $number in $numbers {
    .column-#{$number} {
      width: ($width/12)*$number;
    }
  }
}

// Importing from the "nav.scss" file
@import "nav";

body {
  @include zeroes;
  background: #202020 url('/images/footer-bg.jpg') repeat;
  min-width: 1200px;
}

body,
input,
textarea,
select {
  @include common;
}

/* I know it is not in the instructions, 
 * but I really hated how long are the h1-6 were stacked
 */
@for $i from 1 through 6 {
  h#{$i} {
      @include general-headings;
      a {
          color: inherit;
          text-decoration: none;
      }
  }
}

strong,
b {
  font-weight: bold;
  color: #000000;
}

em,
i {
  font-style: italic;
}

a {
  color: $cyan-blue;
}

sub,
sup {
  position: $relative-position;
  font-size: 0.8em;
}

sub {
  top: 0.5em;
}

sup {
  top: -0.5em;
}

hr {
  border: 0;
  border-top: solid 1px #ddd;
}

p,
ul,
ol,
dl,
table {
  margin-bottom: 1em;
}

header {
  margin-bottom: 2em;
  line-height: 1.7em;

  h2 {
    font-size: 2.5em;
  }

  .byline {
    display: $block;
    margin: 0.5em 0 0 0;
    padding: 0 0 0.5em 0;
    text-transform: uppercase;
    font-size: 1.4em;
  }
}

section {
  margin-bottom: 3em;

  > :last-child {
    margin-bottom: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
}

article {
  margin-bottom: 3em;

  > :last-child {
    margin-bottom: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
}

blockquote {
  @include zeroes;
  border: none;
  font-style: normal;
}

footer {
  margin-top: 1em;
}

.container {
  width: 1200px;
  margin-left: auto;
  margin-right: auto;

  .small {
    width: 900px;
  }

  .big {
    width: 100%;
    max-width: 1500px;
    min-width: 1200px;
  }
}

.row {
  margin-left: -50px;

  section,
  article {
    margin-bottom: 0;
  }
  
  [class*='column-'] {
    padding: 50px 0 0 50px;
    float: left;
    box-sizing: border-box;
  }

  &:after {
    content: '';
    display: $block;
    clear: both;
    height: 0;
  }
}

/* Again, 
 * I know it is not in the instructions, 
 * but if I can make it more compact I will
 */
@for $i from 1 through 12 {
  .column-#{$i} {
      width: 100;
  }
}

@media all and (min-width: 576px) {
  @include make-column(100%);
}

.image {
  display: $inline-block;

  img {
    width: 100%;
    display: $block;
  }

  .featured {
    width: 100%;
    display: $block;
    margin: 0 0 2em 0;
  }

  .full {
    width: 100%;
    display: $block;
    margin-bottom: 2em;
  }
  
  .left {
    float: left;
    margin: 0 2em 2em 0;
  }

  .centered {
    display: $block;
    margin: 0 0 2em 0;

    img {
      width: auto;
      margin: 0 auto;
    }
  }
}

ul.default {
  @include zeroes;
  list-style: none;

  li {
    display: $block;
    padding: 2em 0em 1.25em 0em;
    border-top: 1px solid $gray-color;

    &:first-child {
      padding-top: 0em;
      border-top: none;
    }
  }

  a {
    text-decoration: none;
    color: rgba(255, 255, 255, .5);

    &:hover {
      text-decoration: underline;
    }
  }
}

ul.style1 {
  @include zeroes;
  list-style: none;

  li {
    padding: 0.60em 0em;
    border-top: 1px solid;
    border-color: $dark-color;

    &:first-child {
      padding-top: 0;
      border-top: 0;
    }
  }
}

ul.style2 {
  @include zeroes;
  list-style: none;

  li {
    padding: 1.90em 0em 1.60em 0em;
    border-top: 1px solid;
    border-color: $dark-color;

    &:first-child {
      padding-top: 0;
      border-top: 0;
    }
  }

  img {
    float: left;
    padding-right: 1em;
  }
}

ul.style5 {
  overflow: hidden;
  margin: 0em 0em 1em 0em;
  padding: 0em;
  list-style: none;

  li {
    float: left;
    padding: 0.25em 0.25em;
    line-height: 0;
  }
}

.button {
  position: $relative-position;
  display: $inline-block;
  margin-top: 0.5em;
  padding: 0.50em 1.5em;
  background: $cyan-blue;
  border-radius: 6px;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 1.1em;
  color: $white;
  transition: color 0.35s ease-in-out, background-color 0.35s ease-in-out;
  cursor: pointer;

  &:hover {
    background: $cyan-blue;
    color: $white !important;
  }
}

.header {
  position: $relative-position;
  background: $white;

  .container {
    position: $relative-position;
    padding: 4em 0em;
  }
}

.logo {
  position: $absolute-position;
  left: 0em;
  top: 3em;

  a {
    display: $block;
    text-decoration: none;
    font-size: 2.8em;
    font-weight: 600;
  }
}

.banner {
  position: $relative-position;
  padding: 12em 0em;
  background: url('/images/banner.jpg') no-repeat center;
  background-size: cover;
  color: $white;
}

.page {
  position: $relative-position;
  background: $white;
}

.main {
  border-top: 1px solid;
  border-color: rgba(0, 0, 0, .2);
}

.sidebar {
  header {
    h2 {
      font-size: 1.6em;
    }
  }
}

.footer {
  position: $relative-position;
  color: $light-color;

  h2 {
    padding-bottom: 1.5em;
    font-size: 1.6em;
    color: $white;
  }

  strong {
    color: rgba(255, 255, 255, .7);
  }
}

.copyright {
  position: $relative-position;
  padding: 3em 0em;
  border-top: 1px solid $gray-color;
  letter-spacing: 1px;
  text-align: center;
  color: $light-color;

  a {
    text-decoration: none;
    color: $light-color !important;
  }
}

.marketing {
  position: $relative-position;

  header {
    h2 {
      font-size: 1.6em;
    }
  }
}

.featured {
  position: $relative-position;

  .divider {
    border-bottom: 1px solid $gray-color;
  }

  .box {
    background: $white;
    padding: 1.4em;
    font-size: 0.95em;
    border-radius: 5px;
  }
}

.balloon {
  padding: 1.87em;
  background: url('/images/balloon-bg.jpg') repeat left top;
  border-radius: 5px;
  line-height: 180%;
  font-size: 1.2em;
  color: $charcoal;

  strong {
    color: $charcoal !important;
  }
}

.ballon-bgbtm {
  height: 1.87em;
}